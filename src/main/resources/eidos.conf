EidosSystem {
// Override the default values here
             language = english
      masterRulesPath = /org/clulab/wm/eidos/${EidosSystem.language}/grammars/master.yml
         taxonomyPath = /org/clulab/wm/eidos/${EidosSystem.language}/grammars/taxonomy.yml
          hedgingPath = /org/clulab/wm/eidos/${EidosSystem.language}/confidence/hedging.txt
        entityFinders = ["gazetteer", "rulebased", "geonorm", "timenorm"]
 keepStatefulConcepts = true
             cacheDir = ./cache
}

filtering {
  stopWordsPath = /org/clulab/wm/eidos/${EidosSystem.language}/filtering/stops.txt
  transparentPath = /org/clulab/wm/eidos/${EidosSystem.language}/filtering/transparent.txt
}

actions {
  useCoref = true
  corefType = "causalBasic"
  taxonomyPath = ${EidosSystem.taxonomyPath}
  useExpansion = true
}

apps {
  inputDirectory = "."
  outputDirectory = "."
  inputFileExtension = ".txt"
  exportAs = ["serialized", "jsonld", "mitre"] // valid modes: jsonld, mitre, serialized
  groundAs = ["wm_flattened", "wm_compositional"] // -- make sure these match ontologies below
  groundTopN = 5
  ontologymapper {
    // outfile = src/main/resources/org/clulab/wm/eidos/${EidosSystem.language}/ontologies/wm_to_edited_MaaS_model.tsv
    outfile = src/main/resources/org/clulab/wm/eidos/${EidosSystem.language}/ontologies/wm_to_MaaS_parameter.tsv
    // outfile = src/main/resources/org/clulab/wm/eidos/${EidosSystem.language}/ontologies/wm_to_MaaS_variable.tsv
  }
}

ontologies {
  // W2V
  useW2V = false
  //wordToVecPath = /org/clulab/wm/eidos/${EidosSystem.language}/w2v/vectors.txt
  wordToVecPath = /org/clulab/wm/eidos/${EidosSystem.language}/w2v/glove.840B.300d.txt

  // Activated Ontologies
  ontologies = ["wm_flattened", "wm_compositional"]

  // Caching, for quick loading, language dependent
  cacheDir = ${EidosSystem.cacheDir}/${EidosSystem.language}
  useCache = false
  includeParents = true

  // Primary
  // Note that these first two are included via the build.sbt libraryDependencies on WorldModelers % Ontologies.
  wm            = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/wm_metadata.yml
  wm_flattened  = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/wm_with_flattened_interventions_metadata.yml
  wm_compositional  = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/wm_compositional_metadata.yml
  interventions = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/interventions_metadata.yml
  // Legacy
  un            = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/un_ontology.yml
  props         = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/un_properties.yml
  // Plugins
  interventions = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/interventions_metadata.yml
  // Indicators
  mitre12       = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/mitre12_indicators.yml
  who           = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/who_ontology.yml
  MaaS-model     = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/MaaS-model-ontology-edited.yaml
  MaaS-parameter = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/MaaS-parameter-ontology.yaml
  MaaS-variable  = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/MaaS-variable-ontology.yaml
  // Variables
  icasa         = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/icasa.yml
  // Other
  mesh          = /org/clulab/wm/eidos/${EidosSystem.language}/ontologies/mesh_ontology.yml
}

geonorm {
  geoNamesIndexURL      = "http://clulab.cs.arizona.edu/models/geonames+woredas.zip"
  geoNamesIndexPath     = ${EidosSystem.cacheDir}/geonames/index
}

timenorm {
  timeRegexPath = /org/clulab/wm/eidos/${EidosSystem.language}/context/timenorm-regexes.txt
}

adjectiveGrounder {
  domainParamKBPath = /org/clulab/wm/eidos/${EidosSystem.language}/quantifierKB/domain_parameters.kb
   quantifierKBPath = /org/clulab/wm/eidos/${EidosSystem.language}/quantifierKB/gradable_adj_fullmodel.kb
}
